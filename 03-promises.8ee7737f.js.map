{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAACN,SAASA,EAAUC,MAAMA,IAElCM,EAAO,CAACP,SAASA,EAAUC,MAAMA,GAAO,GAEzCA,EAAM,G,CAsEAQ,SAASC,cAAc,aAE/BC,iBAAiB,UAAWC,IAE/B,GADAA,EAAGC,iBACAD,EAAGE,cAAcC,aAAa,WAC/B,OAEF,IAvEF,SAAkBC,GAChB,MAAMC,EAAa,CACjBC,OAAUC,IACR,IAAIC,GAASC,MAAMF,IAAUA,EAAQ,EAIrC,OAHIC,GACFvB,EAAAyB,OAAOC,QAAQ,8BAEVH,CAAK,EAEdnB,MAAQkB,IACN,IAAIC,GAASC,MAAMF,IAAUA,GAAS,EAItC,OAHIC,GACFvB,EAAAyB,OAAOC,QAAQ,8BAEVH,CAAK,EAEdI,KAAOL,IACL,IAAIC,GAASC,MAAMF,IAAUA,GAAS,EAItC,OAHIC,GACFvB,EAAAyB,OAAOC,QAAQ,6BAEVH,CAAK,GAGhB,OAAOK,OAAOC,KAAKT,GAAYU,QAAO,CAACC,EAAIC,KACzC,IAAIC,EAAIC,SAASf,EAAKgB,SAASH,GAAKV,MAAM,IACtCC,EAAQH,EAAWY,GAAKC,GAC5B,OAAOF,GAAOR,CAAK,IAClB,E,CA2CCa,CAASrB,EAAGE,eACd,QAzCJ,SAAoBoB,GAClB,IAAKlC,SAAAmC,EAAUC,KAAAC,GAAQH,EACvB,MAAMI,EAAQD,EAAKL,SACbd,EAASa,SAASO,EAAc,OAAEnB,MAAM,IACxCoB,EAAQR,SAASO,EAAa,MAAEnB,MAAM,IACtCK,EAAOO,SAASO,EAAY,KAAEnB,MAAM,IAC1C,IAAIqB,EAAYhB,EAChBa,EAAKI,aAAa,UAAU,QAC5BD,EAAYD,EACZ,MAAMG,EAAc1C,IACfA,IAAakB,GACdmB,EAAKM,gBAAgB,UAAU,EAGnC,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,EAAQ0B,IACV7C,EAAc6C,EAAE,EAAGJ,GAC3BK,MAAMC,IACZ,MAAM9C,SAACA,EAAQC,MAAEA,GAAS6C,EAC1BjD,EAAAyB,OAAOyB,QAAQ,uBAAqB/C,QAAiBC,OACnDyC,EAAS1C,EAAS,IAErBgD,OAAOF,IACN,MAAM9C,SAACA,EAAQC,MAAEA,GAAS6C,EAC1BjD,EAAAyB,OAAO2B,QAAQ,sBAAoBjD,QAAeC,OAClDyC,EAAW1C,EAAS,IAEtBwC,GAAahB,C,CAqBf0B,CAJa,CACXlD,SAAU,EACVoC,KAAMxB,EAAGE,eAEK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport \"notiflix/dist/notiflix-3.2.5.min.css\"\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position:position, delay:delay});\n      } else {\n        reject({position:position, delay:delay});\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction validate(form){\n  const validators = {\n    amount : (value) => {\n      let valid = !isNaN(value) && value > 0\n      if(!valid){\n        Notify.warning(`amount must be integer > 0`)\n      }\n      return valid\n    }, \n    delay: (value) => {\n      let valid = !isNaN(value) && value >= 0\n      if(!valid){\n        Notify.warning(`delay must be integer >= 0`)\n      }\n      return valid\n    }, \n    step: (value) => {\n      let valid = !isNaN(value) && value >= 0\n      if(!valid){\n        Notify.warning(`step must be integer >= 0`)\n      }\n      return valid\n    }\n  }\n  return Object.keys(validators).reduce((acc,key) =>{\n    let v = parseInt(form.elements[key].value,10)\n    let valid = validators[key](v)\n    return acc && valid\n  }, true)\n}\n\nfunction doPromises(data){\n  let {position, form} = data\n  const elems = form.elements\n  const amount = parseInt(elems['amount'].value,10)\n  const delay = parseInt(elems['delay'].value,10)\n  const step = parseInt(elems['step'].value,10)\n  let currDelay = step\n  form.setAttribute(\"pending\",\"true\")\n  currDelay = delay\n  const unblocking = (position) =>{\n    if(position === amount){\n      form.removeAttribute(\"pending\")\n    }\n  }\n  for (let i = 0; i < amount; i++){\n    const promise = createPromise(i+1, currDelay)\n    promise.then((data) => {\n      const {position, delay} = data\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      unblocking(position)\n    })\n    .catch((data) => {\n      const {position, delay} = data\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      unblocking(position)\n    })\n    currDelay += step\n  }\n\n\n}\n\n\nconst form = document.querySelector('form.form')\n\nform.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault()\n  if(ev.currentTarget.getAttribute(\"pending\")){\n    return\n  }\n  if(!validate(ev.currentTarget)){\n    return\n  }\n  const data = {\n    position: 1,\n    form: ev.currentTarget\n  }\n  doPromises(data)\n})\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","currentTarget","getAttribute","form1","validators","amount","value","valid","isNaN","Notify","warning","step","Object","keys","reduce","acc","key","v","parseInt","elements","$47d4ff9957288465$var$validate","data1","position1","form","form2","elems","delay1","currDelay","setAttribute","unblocking","removeAttribute","i","then","data","success","catch","failure","$47d4ff9957288465$var$doPromises"],"version":3,"file":"03-promises.8ee7737f.js.map"}