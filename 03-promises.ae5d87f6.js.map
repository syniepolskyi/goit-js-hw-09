{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAWC,GAClB,IAAKC,SAAAC,EAAUC,KAAAC,GAAQJ,EACvB,MAAMK,EAAQD,EAAKE,SACbC,EAASC,SAASH,EAAc,OAAEI,MAAM,IACxCC,EAAQF,SAASH,EAAa,MAAEI,MAAM,IAE5C,IAAIE,EADSH,SAASH,EAAY,KAAEI,MAAM,IAE1B,IAAbP,IACDE,EAAKQ,aAAa,UAAU,QAC5BD,EAAYD,IArChB,SAAuBT,EAAUY,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAACjB,SAASA,EAAUY,MAAMA,IAElCM,EAAO,CAAClB,SAASA,EAAUY,MAAMA,GAAO,GAEzCA,EAAM,G,EA6BKQ,CAAcnB,EAAUS,GAChCW,MAAMC,IACZ,MAAMtB,SAACA,EAAQY,MAAEA,GAASU,EAC1B1B,EAAA2B,OAAOC,QAAQ,uBAAqBxB,QAAiBY,MAAU,IAEhEa,OAAOH,IACN,MAAMtB,SAACA,EAAQY,MAAEA,GAASU,EAC1B1B,EAAA2B,OAAOG,QAAQ,sBAAoB1B,QAAeY,MAAU,IAE7De,SAAQ,KACP,GAAG1B,EAAWK,EAEZ,OADAP,EAAKC,WACEF,EAAWC,GAEpBI,EAAKyB,gBAAgB,UAAU,G,CAMtBC,SAASC,cAAc,aAE/BC,iBAAiB,UAAWC,IAE/B,GADAA,EAAGC,iBACAD,EAAGE,cAAcC,aAAa,WAC/B,OAEF,GAlDgBC,EAkDHJ,EAAGE,eAjDH,CAAC,SAAU,QAAS,QACrBG,QAAO,CAACC,EAAIC,KACtB,IAAIC,EAAIjC,SAAS6B,EAAK/B,SAASkC,GAAK/B,MAAM,IACtCiC,GAAUC,MAAMF,IAAMA,EAAI,EAI9B,OAHIC,GACF7C,EAAA2B,OAAOoB,QAAQ,GAAGJ,yBAEbD,GAAOG,CAAK,IAClB,GA0CD,OAnDJ,IAAkBL,EAyDhBtC,EAJa,CACXE,SAAU,EACVE,KAAM8B,EAAGE,eAEK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio'\nimport \"notiflix/dist/notiflix-3.2.5.min.css\"\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position:position, delay:delay});\n      } else {\n        reject({position:position, delay:delay});\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nfunction validate(form){\n  const keys = ['amount', 'delay', 'step']\n  return keys.reduce((acc,key) =>{\n    let v = parseInt(form.elements[key].value,10)\n    let valid = (!isNaN(v) && v > 0)\n    if(!valid){\n      Notify.warning(`${key} must be integer > 0`)\n    }\n    return acc && valid\n  }, true)\n}\n\nfunction doPromises(data){\n  let {position, form} = data\n  const elems = form.elements\n  const amount = parseInt(elems['amount'].value,10)\n  const delay = parseInt(elems['delay'].value,10)\n  const step = parseInt(elems['step'].value,10)\n  let currDelay = step\n  if(position === 1){\n    form.setAttribute(\"pending\",\"true\")\n    currDelay = delay\n  }\n  const promise = createPromise(position, currDelay )\n  promise.then((data) => {\n    const {position, delay} = data\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch((data) => {\n    const {position, delay} = data\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n  })\n  .finally(() => {\n    if(position < amount){\n      data.position++\n      return doPromises(data)\n    }\n    form.removeAttribute(\"pending\")\n  })\n\n}\n\n\nconst form = document.querySelector('form.form')\n\nform.addEventListener(\"submit\", (ev) => {\n  ev.preventDefault()\n  if(ev.currentTarget.getAttribute(\"pending\")){\n    return\n  }\n  if(!validate(ev.currentTarget)){\n    return\n  }\n  const data = {\n    position: 1,\n    form: ev.currentTarget\n  }\n  doPromises(data)\n})\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$doPromises","data1","position","position1","form","form2","elems","elements","amount","parseInt","value","delay1","currDelay","setAttribute","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$createPromise","then","data","Notify","success","catch","failure","finally","removeAttribute","document","querySelector","addEventListener","ev","preventDefault","currentTarget","getAttribute","form1","reduce","acc","key","v","valid","isNaN","warning"],"version":3,"file":"03-promises.ae5d87f6.js.map"}